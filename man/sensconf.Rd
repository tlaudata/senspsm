% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensconf.R
\name{sensconf}
\alias{sensconf}
\title{Function to perform sensitivity analysis of calibrated confounders
This function calculate ATT, SE , and lambda and gamma values for a set of conditional probabilities for U}
\usage{
sensconf(
  data,
  treatment,
  indvar,
  outvar,
  categorical,
  p00 = 0.5,
  p01 = 0.5,
  p10 = 0.5,
  p11 = 0.5,
  R = 1000,
  workers = 6,
  digits = 3,
  distance = "logit",
  caliperval = 0.1
)
}
\arguments{
\item{data}{a dataframe}

\item{treatment}{(\code{character}) Name of treatment variable}

\item{indvar}{(\code{character}) Vector of names of covariate variables}

\item{outvar}{(\code{character}) Name of the outcome variable}

\item{categorical}{(\code{boolean}) TRUE if categorical, FALSE if not}

\item{p00}{(\code{numeric}) Value of the probability U=1 when T=0 and Y=0}

\item{p01}{(\code{numeric}) Value of the probability U=1 when for T=0 and Y=1}

\item{p10}{(\code{numeric}) Value of the probability U=1 when for T=1 and Y=0}

\item{p11}{(\code{numeric}) Value of the probability U=1 when for T=1 and Y=1}

\item{R}{(\code{numeric}) Number of simulations}

\item{workers}{(\code{numeric}) Number of workers for parallel processing}

\item{digits}{(\code{numeric}) Number of digits}

\item{distance}{(\code{character}) Type of the distance; "logit" by default}

\item{caliperval}{(\code{numeric}) Value of the caliper}
}
\value{
a data frame with ATT, SE, and lambda and gamma values
}
\description{
Function to perform sensitivity analysis of calibrated confounders
This function calculate ATT, SE , and lambda and gamma values for a set of conditional probabilities for U
}
\examples{
# Example 1

# Import data
data(lalonde, package = "Matching")
library(magrittr)

data <- dplyr::mutate(lalonde,
  black = factor(black),
  hisp = factor(hisp),
  married = factor(married)
)

xvars <- c("age", "educ", "black", "hisp", "married", "re75", "re74")
outcome <- "re78"
treatment <- "treat"

# Example 1 (Sensitivity using the effect of 'calibrated' confounders)
sensconf(data = data, treatment = treatment, indvar = xvars, outvar = outcome, categorical = FALSE, R = 5)

# Example 2 (Sensitivity analysis to characterize the killer confounders)
killconf(data = data, treatment = treatment, indvar = xvars, outvar = outcome, categorical = FALSE, d = 0.3, s = 0.3, R = 5)
}
